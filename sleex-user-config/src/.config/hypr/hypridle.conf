general {
    lock_cmd = pidof hyprlock || hyprlock  # avoid starting multiple hyprlock instances.
    before_sleep_cmd = qs -p /usr/share/sleex ipc call lock lock    # lock before suspend.
    after_sleep_cmd = hyprctl dispatch dpms on  # to avoid having to press a key twice to turn on the display.
}

listener {
    timeout = 180                             # 3min.
    on-timeout = brightnessctl -s set 10      # set monitor backlight to minimum, avoid 0 on OLED monitor.
    on-resume = brightnessctl -r              # monitor backlight restore.
}

# turn off keyboard backlight if present (auto-detect device)
listener {
    timeout = 180    # 3min.
    on-timeout = KBD=$(ls /sys/class/leds | grep -i kbd_backlight | head -n1) && \
                 [ -n "$KBD" ] && brightnessctl -sd "$KBD" set 0
    on-resume  = KBD=$(ls /sys/class/leds | grep -i kbd_backlight | head -n1) && \
                 [ -n "$KBD" ] && brightnessctl -rd "$KBD"
}

listener {
    timeout = 200                                              # 3min, 20sec
    on-timeout = qs -p /usr/share/sleex ipc call lock lock     # lock screen when timeout has passed
}

listener {
    timeout = 220                                                # 3min, 40sec
    on-timeout = hyprctl dispatch dpms off                       # screen off when timeout has passed
    on-resume = hyprctl dispatch dpms on && brightnessctl -r     # screen on when activity is detected after timeout has fired.
}

listener {
    timeout = 240                      # 4min
    on-timeout = systemctl suspend     # suspend pc
}
